"""
1) Дан список в котором хранится строка. Разрежьте его на две равные части (если длина строки нечетная, то длина первой части должна быть на один символ больше). Переставьте эти две части местами, при этом каждый символ должен являться отдельной строкой, результат запишите в новый список и выведите на экран.
"""
list_='12345'
if len(list_)%2==0:
  print(list(list_[len(list_)//2:] + list_[:(len(list_)//2)]))
else :
  print(list(list_[len(list_)//2+1:]  +list_[:(len(list_)//2)+1]))
"""
2) Дан список, состоящий ровно из двух строк. Переставьте эти слова местами. Результат запишите в список и выведите получившийся результат.
"""
list1="bat bit"
a = list1.split()
print(a[1] +' ' + a[0])
"""
3) Даны два множества. С помощью определенного метода (оператора) найдите пересечение множеств:
"""
# писать код здесь
"""
4) Четверо коллег собрались на обед. Но они не могут решить, где им пообедать, так как у каждого свои вкусовые предпочтения. Помогите найти им выход в данной ситуации. Данные:

-Тилек хочет покушать в Dodo или в ImperiaPizza, ну или в крайнем случае FreshBox.
-Тимур хочет покушать шашлык в OchakKebab или рамен в FreshBox.
-Александр очень хочет вафли с FreshBox либо KFC.
-Элину устраивает любой из вариантов. 

Напишите код, который сможет определить, в какое место им лучше пойти.
"""
# писать код здесь
"""
5) Создайте словарь где ключами будут фрукты, а значением их цены. Удалите те элементы, значение которых будет чётным.
"""
a = {'apple': 145, 'banan': 152,'watermelon':37, 'orange' : 142}
b = {}
for k,v in list(a.items()):
  if v%2==0:
    del a[k]
b.update(a)
print(b)
"""
6) Создайте словарь, где значениями будут являться числа. Найдите сумму этих значений.
"""
a = {'apple': 145, 'banan': 152,'watermelon':37, 'orange' : 142}
b = sum(a.values())
print(b)
"""
7) Создайте словарь из чисел от 1 до 10, где ключами будут сами числа, а значениями их квадраты.
"""
list_ = list(range(1, 11))
b = {key: key**2 for key in list_}
print(b)
"""
8) Дан словарь, значениями в котором являются другие словари. Замените внутренние словари их значениями. Например: my_dict = {'first': {'a': 1}, 'second': {'b': 2}} -> {'first': 1, 'second': 2}
"""
# my_dict = {'first': {'a': 1},'second': {'b': 2}}
# my_dict.replace(my_dict[0][0].keys(), my_dict[0][0].values())
# my_dict.replace(my_dict[1][0].keys(), my_dict[1][0].values())
# print(my_dict)
"""
9) Дан словарь. Попытайтесь получить значение по ключу. Обработайте ошибку, возникающую в том случае, если такого ключа нет.
"""
import ast 
try:
  a ={1: 'cda', "a":2, None:4, 5.2:7}
  b = input()
  if ast.literal_eval(b) is int:
    print(a[int(b)])
  elif ast.literal_eval(b) is str:
    print(a[str(b)])
  elif ast.literal_eval(b) is float:
    print(a[float(b)])
  elif ast.literal_eval(b) is tuple:
    print(a[tuple(b)])
except :
  print('Нет такого ключа')
else :
  print(a[b])
  
"""
10) Запросите у пользователя сумму, которая у него сейчас есть в бумажнике. Если он введёт сумму, меньшую чем 0, то выбросите исключение с текстом "Сумма не может быть отрицательной!"
"""
try :
    num = input()
    if int(num) < 0:
        raise Exception 
except:
    print("Сумма не может быть отрицательной!")
else :
    print(f' У вас :  {num} сом ')
